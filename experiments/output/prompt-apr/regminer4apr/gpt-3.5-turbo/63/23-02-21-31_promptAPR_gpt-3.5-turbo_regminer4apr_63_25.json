[
    {
        "patch": "private void buildPossibleExpressions(final CronDefinition cronDefinition) {\n    final List<CronParserField> sortedExpression = cronDefinition.getFieldDefinitions().stream()\n            .map(this::toCronParserField)\n            .sorted(CronParserField.createFieldTypeComparator())\n            .collect(Collectors.toList());\n\n    int expectedParts = 6; // Expected number of parts in the cron expression\n    if (cronDefinition.isMatchDayOfWeek()) {\n        expectedParts = 7;\n    }\n\n    if (sortedExpression.size() != expectedParts) {\n        throw new IllegalArgumentException(\"Cron expression contains \" + sortedExpression.size() + \" parts but we expect \" + expectedParts);\n    }\n\n    expressions.put(expectedParts, sortedExpression);\n}",
        "patched_method_loc": [
            55,
            72
        ],
        "status": "[CE]",
        "error_message": [
            "[62,23] cannot find symbol\n  symbol:   method isMatchDayOfWeek()"
        ],
        "validation_time": 2.3099398612976074
    },
    {
        "patch": "private void buildPossibleExpressions(final CronDefinition cronDefinition) {\n    final List<CronParserField> sortedExpression = cronDefinition.getFieldDefinitions().stream()\n            .map(this::toCronParserField)\n            .sorted(CronParserField.createFieldTypeComparator())\n            .collect(Collectors.toList());\n\n    if (sortedExpression.size() > 0) {\n        expressions.put(sortedExpression.size() - 1, new ArrayList<>(sortedExpression.subList(0, sortedExpression.size() - 1)));\n    }\n    expressions.put(sortedExpression.size(), sortedExpression);\n}",
        "patched_method_loc": [
            55,
            66
        ],
        "status": "[FE]",
        "error_message": [
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testThreeRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 4 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testFiveRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]"
        ],
        "validation_time": 19.08231544494629
    },
    {
        "patch": "private void buildPossibleExpressions(final CronDefinition cronDefinition) {\n    final List<CronParserField> sortedExpression = cronDefinition.getFieldDefinitions().stream()\n            .map(this::toCronParserField)\n            .sorted(CronParserField.createFieldTypeComparator())\n            .collect(Collectors.toList());\n\n    int expectedSize = cronDefinition.getFieldDefinitions().size() - 1;\n\n    if (sortedExpression.size() == expectedSize) {\n        expressions.put(sortedExpression.size(), sortedExpression);\n    } else if (sortedExpression.size() == expectedSize + 1) {\n        expressions.put(sortedExpression.size() - 1, new ArrayList<>(sortedExpression.subList(0, sortedExpression.size() - 1)));\n        expressions.put(sortedExpression.size(), sortedExpression);\n    } else {\n        throw new IllegalArgumentException(\"Cron expression contains \" + sortedExpression.size() + \" parts but we expect one of [\" + expectedSize + \", \" + (expectedSize + 1) + \"]\");\n    }\n}",
        "patched_method_loc": [
            55,
            72
        ],
        "status": "[FE]",
        "error_message": [
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testThreeRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 4 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testFiveRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]"
        ],
        "validation_time": 19.166550636291504
    },
    {
        "patch": "private void buildPossibleExpressions(final CronDefinition cronDefinition) {\n    final List<CronParserField> sortedExpression = cronDefinition.getFieldDefinitions().stream()\n            .map(this::toCronParserField)\n            .sorted(CronParserField.createFieldTypeComparator())\n            .collect(Collectors.toList());\n\n    int expectedFieldCount = cronDefinition.getFieldDefinitions().size();\n    int actualFieldCount = sortedExpression.size();\n\n    if (actualFieldCount != expectedFieldCount) {\n        throw new IllegalArgumentException(\"Cron expression contains \" + actualFieldCount + \" parts but we expect \" + expectedFieldCount);\n    }\n\n    if (lastFieldIsOptional(sortedExpression)) {\n        expressions.put(sortedExpression.size() - 1, new ArrayList<>(sortedExpression.subList(0, sortedExpression.size() - 1)));\n    }\n    expressions.put(sortedExpression.size(), sortedExpression);\n}",
        "patched_method_loc": [
            55,
            73
        ],
        "status": "[FE]",
        "error_message": [
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testThreeRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 4 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testFiveRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]"
        ],
        "validation_time": 19.133447647094727
    },
    {
        "patch": "private void buildPossibleExpressions(final CronDefinition cronDefinition) {\n    final List<CronParserField> sortedExpression = cronDefinition.getFieldDefinitions().stream()\n            .map(this::toCronParserField)\n            .sorted(CronParserField.createFieldTypeComparator())\n            .collect(Collectors.toList());\n\n    int expectedFieldCount = cronDefinition.getFieldDefinitions().size() + (lastFieldIsOptional(sortedExpression) ? -1 : 0);\n\n    if (sortedExpression.size() == expectedFieldCount) {\n        expressions.put(sortedExpression.size(), sortedExpression);\n    } else {\n        throw new IllegalArgumentException(\"Cron expression contains \" + sortedExpression.size() + \" parts but we expect \" + expectedFieldCount);\n    }\n}",
        "patched_method_loc": [
            55,
            69
        ],
        "status": "[FE]",
        "error_message": [
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEverySecond: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryDayFireAtTenFifteenYear2005: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testCronAndWithRangeHours: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testCronWithAndHours: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryFiveMinutesBetween14and15AndBetween18And19EveryDay: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testDescriptionDayOfWeek: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryDayFireAtNoon: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryMinuteBetween14and15EveryDay: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEvery45Seconds: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryDayFireAtTenFifteen: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryHour: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testCronAndWithRangesAndEveryExpressions: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testDoWRange: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryFiveMinutesBetween14and15EveryDay: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryDayEveryFourHoursFromHour2: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserTest#testParseMulticron: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserTest#testParseExtendedQuartzCronWithAsterixDoY: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect 7",
            "com.cronutils.parser.CronParserTest#testParseExtendedQuartzCron: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect 7",
            "com.cronutils.parser.CronParserTest#testParseExtendedQuartzCronWithQuestionMarkDoY: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect 7",
            "com.cronutils.parser.CronParserTest#testThatEveryMinuteIsPreserved: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserTest#testParseEveryXyears: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testIntervalMinutes: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testEveryXYears: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testErrorAbout2Parts: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testDescribeExpressionWithQuestionMarkAndWeekdays: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testSingleDoWStringMapping: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testIntervalSeconds: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#supportQuartzCronExpressionIncrementsOnYears: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testSunToSat: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testNLSupported: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testInvalidCharsDetectedWithHashExpression1: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testInvalidCharsDetectedWithHashExpression2: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testMonthRangeStringMapping: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testInvalidCharsDetectedWithSingleSpecialChar: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testReportedErrorContainsSameExpressionAsProvided: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testRegressionDifferentMessageForException: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testInvalidCharsDetected: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testLSupportedInDoMRange: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testLSupportedInRange: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testRejectIllegalMonthArgument: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testLSupportedInDoM: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testSingleMonthStringMapping: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testParseExpressionWithQuestionMarkAndWeekdays: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testLSupportedInDoMRangeNextExecutionCalculation: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testJulyMonthAsStringConsideredSpecialChar: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testDoMAndDoWParametersInvalidForQuartz: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testMissingExpressionAndInvalidCharsInErrorMessage: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testDoWRangeStringMapping: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testErrorAboutMissingSteps: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testDescribeExpression: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.utils.descriptor.TestDescriptor#testEverySecond: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.utils.descriptor.TestDescriptor#testEvery1SecondGerman: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.utils.descriptor.TestDescriptor#testEvery2SecondsGerman: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.utils.descriptor.TestDescriptor#testEverySecondGerman: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.utils.descriptor.TestDescriptor#testEvery2Seconds: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.utils.descriptor.TestDescriptor#testEverySecond2WithoutYear: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.utils.descriptor.TestDescriptor#testEverySecondWithoutYear: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.utils.descriptor.TestDescriptor#testEvery1Second: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.utils.descriptor.TestDescriptor#testEverySecond2: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.validator.CronValidatorQuartzIntegrationTest#testMonthRangeMappingIsValid: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.validator.CronValidatorQuartzIntegrationTest#testDayOfWeekMappingIsValid: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.validator.CronValidatorQuartzIntegrationTest#testSingleMonthMappingIsValid: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.validator.CronValidatorQuartzIntegrationTest#testQuestionMarkSupport: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.validator.CronValidatorQuartzIntegrationTest#testDayOfWeekRangeMappingIsValid: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.Issue338Test#testEverySecondInFrench: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.Issue143Test#testCase1: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.Issue143Test#testCase2: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.Issue143Test#testCase3: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.Issue143Test#testCase4: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testThreeRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect 5",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testFiveRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionRightDoWForFixedYear: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testPeriodicIncrementalHoursIgnorePeriodBounds: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testTimeToNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#lastExecutionDec31NotFail: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionRightDoWForFixedMonth: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#nextExecutionNotFail: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#noDateTimeExceptionIsThrownGeneratingNextExecutionWithDayOfWeekFilters: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionTimeProperlySet2: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testShiftTo24thHour: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testExecutionTimeForRanges: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testSaturdayExecutionTime: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#bigNumbersOnDayOfMonthField: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testCronWithFirstWorkDayOfWeek: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testForCron: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testDayOfWeekMapping: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testMinimumInterval: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testMultipleMinuteIntervalTimeFromLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testShiftTo32ndDay: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#lastDayOfTheWeek: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testDayLightSavingsSwitch: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testIllegalQuestionMarkValue: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testMonthRangeExecutionTime: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testHourlyIntervalTimeFromLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#validate31IsSupportedForDoM: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testTimeFromLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testDoesNotIgnoreMonthOrDayOfWeek: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionProducingInvalidPrintln: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testWeekdayExecutionTime: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#mustJumpToEndOfMonthIfCurrentMonthHasDesiredDay: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#noSpecificDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#validateIsMatchForRangeOfDates: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#descriptionForExpressionTellsWrongDoW: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionEverySecond: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testTimeShiftingProperlyDone: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#noSpecificDayOfMonthEvaluatedOnLastDay: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionProducingInvalidValues: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testMultipleMinuteIntervalMatch: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionTimeProperlySet: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#mustJumpToNextMonthIfCurrentMonthDoesNotHaveDesiredDay: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testLastExecutionTimeForFixedMonth: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.Issue215Test#testFridayToSaturday: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.Issue215Test#testWorkdayBugWithNextMonth: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.Issue218Test#testCronDefinitionExecutionTimeGenerator: java.lang.IllegalArgumentException: : Cron expression contains 3 parts but we expect 2",
            "com.cronutils.model.CronTest#testEquivalent: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.CronTest#testSerialization: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.CronTest#testAsScheduleExpression: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptLastDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptFirstDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptLastMonth: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptFirstMonth: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.mapper.CronMapperIntegrationTest#testSpecificTimeQuartzToCron4j: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.mapper.CronMapperIntegrationTest#testMoreThanOneInstanceQuartzToCron4j: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.mapper.CronMapperIntegrationTest#testRangeOfTimeQuartzToCron4j: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.utils.descriptor.Issue227Test#testProperDescriptorOutputWithSeconds: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.utils.descriptor.Issue227Test#testProperDescriptorOutput: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.Issue200Test#testMustMatchCronEvenIfNanoSecondsVaries: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.Issue200Test#testMatchExact: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.CompositeCronTest#validateThrowsExceptionEmptyCrons: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.CompositeCronTest#validate: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.CompositeCronTest#asString: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.CompositeCronTest#retrieveFieldsAsMap: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.CompositeCronTest#equivalent: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.CompositeCronTest#testExampleIssue318: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.CompositeCronTest#weDoNotSupportCronsWithDifferentDefinitions: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.CompositeCronTest#retrieve: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.CompositeCronTest#equivalent1: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.CompositeCronTest#getCronDefinition: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.CompositeCronTest#testIssue263: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.CompositeCronTest#weDoNotSupportCompositeWithoutCrons: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect 6",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testForCron: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect 7",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testExecutionTimesWithIncrementsGreaterThanDaysOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect 7",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testLastExecutionEveryTwoWeeksStartingWithFirstDayOfYear: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect 7",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testLastExecutionEveryTwoWeeksStartingWithFirstDayOfYearIssue249TzUTC: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect 7",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testNextExecutionEveryTwoWeeksStartingWithFirstDayOfYear: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect 7",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testExecutionTimesEveryTwoWeeksStartingWithFirstDayOfYear: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect 7",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testQuartzCompatibilityIfDoYisQuestionMark: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect 7",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testQuartzCompatibilityIfDoYisOmitted: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect 7",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testCustomQuarterlySchedule: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect 7",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testLastExecutionEveryTwoWeeksStartingWithFirstDayOfYearIssue249TzBuenosAires: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect 7"
        ],
        "validation_time": 18.98158359527588
    },
    {
        "patch": "private void buildPossibleExpressions(final CronDefinition cronDefinition) {\n    final List<CronParserField> sortedExpression = cronDefinition.getFieldDefinitions().stream()\n            .map(this::toCronParserField)\n            .sorted(CronParserField.createFieldTypeComparator())\n            .collect(Collectors.toList());\n\n    int expectedFieldCount = cronDefinition.getFieldDefinitions().size();\n    int actualFieldCount = sortedExpression.size();\n\n    if (actualFieldCount != expectedFieldCount) {\n        throw new IllegalArgumentException(\"Cron expression contains \" + actualFieldCount + \" parts but we expect \" + expectedFieldCount);\n    }\n\n    for (int i = 0; i <= actualFieldCount; i++) {\n        expressions.put(i, new ArrayList<>(sortedExpression.subList(0, i)));\n    }\n}",
        "patched_method_loc": [
            55,
            72
        ],
        "status": "[FE]",
        "error_message": [
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testErrorAbout2Parts: java.lang.AssertionError: Expected : (an instance of java.lang.IllegalArgumentException and exception with message a string containing \"Cron expression contains 2 parts but we expect one of [6, 7]\")"
        ],
        "validation_time": 21.330118656158447
    },
    {
        "patch": "private void buildPossibleExpressions(final CronDefinition cronDefinition) {\n    final List<CronParserField> sortedExpression = cronDefinition.getFieldDefinitions().stream()\n            .map(this::toCronParserField)\n            .sorted(CronParserField.createFieldTypeComparator())\n            .collect(Collectors.toList());\n\n    if (sortedExpression.size() >= 7) {\n        expressions.put(7, new ArrayList<>(sortedExpression.subList(0, 7)));\n    } else if (sortedExpression.size() >= 6) {\n        expressions.put(6, new ArrayList<>(sortedExpression.subList(0, 6)));\n    }\n\n    expressions.put(sortedExpression.size(), sortedExpression);\n}",
        "patched_method_loc": [
            55,
            69
        ],
        "status": "[FE]",
        "error_message": [
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEverySecond: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryFiveMinutesBetween14and15AndBetween18And19EveryDay: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testDescriptionDayOfWeek: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryDayFireAtNoon: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryMinuteBetween14and15EveryDay: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEvery45Seconds: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryDayFireAtTenFifteen: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryHour: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testCronAndWithRangesAndEveryExpressions: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryFiveMinutesBetween14and15EveryDay: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryDayEveryFourHoursFromHour2: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testIntervalMinutes: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testErrorAbout2Parts: java.lang.AssertionError: Expected : (an instance of java.lang.IllegalArgumentException and exception with message a string containing \"Cron expression contains 2 parts but we expect one of [6, 7]\")",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testIntervalSeconds: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testSunToSat: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testNLSupported: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testReportedErrorContainsSameExpressionAsProvided: java.lang.AssertionError: Expected : (an instance of java.lang.IllegalArgumentException and exception with message a string containing \"Invalid cron expression: 0/1 * * * * *. Both, a day-of-week AND a day-of-month parameter, are not supported.\")",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testRegressionDifferentMessageForException: java.lang.AssertionError: Expected : (an instance of java.lang.IllegalArgumentException and exception with message a string containing \"Invalid chars in expression! Expression: $ Invalid chars: $\")",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testLSupportedInDoMRange: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testLSupportedInDoM: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testLSupportedInDoMRangeNextExecutionCalculation: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testMissingExpressionAndInvalidCharsInErrorMessage: java.lang.AssertionError: Expected : (an instance of java.lang.IllegalArgumentException and exception with message a string containing \"Failed to parse '* * -1 * * ?'. Invalid expression! Expression: -1 does not describe a range. Negative numbers are not allowed.\")",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testErrorAboutMissingSteps: java.lang.AssertionError: Expected : (an instance of java.lang.IllegalArgumentException and exception with message a string containing \"Missing steps for expression: */\")",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testDescribeExpression: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.TestDescriptor#testEverySecondWithoutYear: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.validator.CronValidatorQuartzIntegrationTest#testQuestionMarkSupport: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testThreeRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 4 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testFiveRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testPeriodicIncrementalHoursIgnorePeriodBounds: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#nextExecutionNotFail: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#noDateTimeExceptionIsThrownGeneratingNextExecutionWithDayOfWeekFilters: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testSaturdayExecutionTime: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#bigNumbersOnDayOfMonthField: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testMinimumInterval: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testDayLightSavingsSwitch: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testHourlyIntervalTimeFromLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#validate31IsSupportedForDoM: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testDoesNotIgnoreMonthOrDayOfWeek: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionProducingInvalidPrintln: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testWeekdayExecutionTime: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#mustJumpToEndOfMonthIfCurrentMonthHasDesiredDay: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#noSpecificDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testTimeShiftingProperlyDone: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#noSpecificDayOfMonthEvaluatedOnLastDay: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionProducingInvalidValues: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testMultipleMinuteIntervalMatch: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#mustJumpToNextMonthIfCurrentMonthDoesNotHaveDesiredDay: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.Issue215Test#testFridayToSaturday: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.Issue215Test#testWorkdayBugWithNextMonth: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptLastDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptFirstDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptLastMonth: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptFirstMonth: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.Issue227Test#testProperDescriptorOutputWithSeconds: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.Issue227Test#testProperDescriptorOutput: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.Issue200Test#testMustMatchCronEvenIfNanoSecondsVaries: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.Issue200Test#testMatchExact: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]"
        ],
        "validation_time": 19.364527225494385
    },
    {
        "patch": "private void buildPossibleExpressions(final CronDefinition cronDefinition) {\n    final List<CronParserField> sortedExpression = cronDefinition.getFieldDefinitions().stream()\n            .map(this::toCronParserField)\n            .sorted(CronParserField.createFieldTypeComparator())\n            .collect(Collectors.toList());\n\n    int expectedParts = cronDefinition.getFieldDefinitions().size();\n    int actualParts = sortedExpression.size();\n\n    if (actualParts != expectedParts && actualParts != expectedParts + 1) {\n        throw new IllegalArgumentException(\"Cron expression contains \" + actualParts + \" parts but we expect one of [\" + expectedParts + \", \" + (expectedParts + 1) + \"]\");\n    }\n\n    if (lastFieldIsOptional(sortedExpression)) {\n        expressions.put(sortedExpression.size() - 1, new ArrayList<>(sortedExpression.subList(0, sortedExpression.size() - 1)));\n    }\n    expressions.put(sortedExpression.size(), sortedExpression);\n}",
        "patched_method_loc": [
            55,
            73
        ],
        "status": "[FE]",
        "error_message": [
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testThreeRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 4 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testFiveRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]"
        ],
        "validation_time": 19.216758012771606
    },
    {
        "patch": "private void buildPossibleExpressions(final CronDefinition cronDefinition) {\n    final List<CronParserField> sortedExpression = cronDefinition.getFieldDefinitions().stream()\n            .map(this::toCronParserField)\n            .sorted(CronParserField.createFieldTypeComparator())\n            .collect(Collectors.toList());\n\n    if (sortedExpression.size() >= 2 && lastFieldIsOptional(sortedExpression)) {\n        expressions.put(sortedExpression.size() - 1, new ArrayList<>(sortedExpression.subList(0, sortedExpression.size() - 1)));\n    }\n    expressions.put(sortedExpression.size(), sortedExpression);\n}",
        "patched_method_loc": [
            55,
            66
        ],
        "status": "[FE]",
        "error_message": [
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testThreeRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 4 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testFiveRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]"
        ],
        "validation_time": 19.42601490020752
    },
    {
        "patch": "private void buildPossibleExpressions(final CronDefinition cronDefinition) {\n    final List<CronParserField> sortedExpression = cronDefinition.getFieldDefinitions().stream()\n            .map(this::toCronParserField)\n            .sorted(CronParserField.createFieldTypeComparator())\n            .collect(Collectors.toList());\n\n    if (lastFieldIsOptional(sortedExpression)) {\n        expressions.put(sortedExpression.size() - 1, new ArrayList<>(sortedExpression.subList(0, sortedExpression.size() - 1)));\n    }\n\n    // Update the expressions based on the allowed number of parts in the cron expression\n    List<Integer> allowedParts = Arrays.asList(6, 7);\n    if (!allowedParts.contains(sortedExpression.size())) {\n        throw new IllegalArgumentException(\"Cron expression contains \" + sortedExpression.size() + \" parts but we expect one of \" + allowedParts);\n    }\n\n    expressions.put(sortedExpression.size(), sortedExpression);\n}",
        "patched_method_loc": [
            55,
            73
        ],
        "status": "[FE]",
        "error_message": [
            "com.cronutils.Issue329Test#infiniteLoop: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue223Test#testEveryWednesdayOfEveryDayNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue332Test#testIsMatchDailightSavingsChange_loop: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserTest#testParseExtendedQuartzCronWithAsterixDoY: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserTest#testParseExtendedQuartzCron: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserTest#testParseExtendedQuartzCronWithQuestionMarkDoY: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserTest#testMultipleSpacesDoNotHurtParsingExpression: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserTest#testParseIncompleteEvery: java.lang.IllegalArgumentException: : Cron expression contains 1 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testDSTOverlap: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testLastExecutionDaysOfWeekOverMonthBoundary: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testEveryTwoMinRollsOverHour: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testWeekdayAndWithMixOfOnAndBetweenLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testEveryTenMinutesNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testCorrectMonthScaleForNextExecution1: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testCorrectMonthScaleForNextExecution2: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testEveryTuesdayAtThirdHourOfDayNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testEveryTuesdayAtThirdHourOfDayLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testWeekdayAndLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testWrongNextExecutionOnDSTEnd: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testNextExecutionProducesStackTraces: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testIsMatchForUnix01: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testIsMatchForUnix02: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testNextExecution2014: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testNextExecution2016: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testCorrectNextExecutionDoWForLeapYear: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#fuzzyHitReturnsVerySmallIntervalDuration: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#invalidDayInMonthCron: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testMondayWeekdayNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testLastExecutionDaylightSaving: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testDSTGap: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testNextExecutionDaylightSaving: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#exactHitReturnsFullIntervalDuration: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testCorrectNextExecutionDoW: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testMondayWeekdayLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue228Test#testFirstMondayOfTheMonthNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue228Test#testEveryWeekendFirstWeekOfMonthNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue228Test#testEveryWeekdaySecondWeekOfMonthNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue228Test#testEveryWeekendForthWeekOfMonthNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue228Test#testEveryWeekdayFirstWeekOfMonthNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue58UnixCronAsStringIntegrationTest#everyOddHourShouldBeParsedCorrectly: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue58UnixCronAsStringIntegrationTest#everyOddMinuteShouldBeParsedCorrectly: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue58UnixCronAsStringIntegrationTest#everyEvenHourShouldBeParsedCorrectly: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue58UnixCronAsStringIntegrationTest#everyEvenMinuteShouldBeParsedCorrectly: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue293Test#test: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue293Test#test: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue293Test#test: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue293Test#test: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testThreeRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 4 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing: java.lang.IllegalArgumentException: : Cron expression contains 3 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testFiveRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.definition.CronDefinitionIssue25IntegrationTest#testExecutionTime: java.lang.IllegalArgumentException: : Cron expression contains 3 parts but we expect one of [6, 7]",
            "com.cronutils.model.definition.CronDefinitionIssue25IntegrationTest#testParser: java.lang.IllegalArgumentException: : Cron expression contains 3 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationTest#testEveryFiveMinutes: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationTest#testEveryMinuteBetween1100And1110: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationTest#testDescribeIssue32Expression01: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationTest#testDescribeIssue32Expression02: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationTest#testAtElevenThirty: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationTest#testAtTwentyThreeFromMondayThroughFriday: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationTest#testEveryMinute: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue215Test#testFridayToSaturday: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue215Test#testWorkdayBugWithNextMonth: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue218Test#testCronDefinitionExecutionTimeGenerator: java.lang.IllegalArgumentException: : Cron expression contains 3 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserCron4JIntegrationTest#testParseSunday: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserCron4JIntegrationTest#testParseIssue32Expression01: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserCron4JIntegrationTest#testParseIssue32Expression02: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserCron4JIntegrationTest#testParseStrictRangeEnforced01: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserCron4JIntegrationTest#testParseStrictRangeEnforced02: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserCron4JIntegrationTest#testParseLastDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCron4jIntegrationTest#testFixedDayOfMonthAndDayOfWeek: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCron4jIntegrationTest#testEveryWeekdayAt6: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCron4jIntegrationTest#testQuick: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCron4jIntegrationTest#testDayOfWeekOverridesAlwaysAtDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCron4jIntegrationTest#testForCron: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCron4jIntegrationTest#testDayOfMonthOverridesAlwaysAtDayOfWeek: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCron4jIntegrationTest#testNextExecutionOverNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCron4jIntegrationTest#testEvery15Minutes: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCron4jIntegrationTest#testEvery2Hours: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCron4jIntegrationTest#testRandomDayOfMonthAndDayOfWeek: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.CronTest#testEquivalent: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.CronTest#testSerialization: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.mapper.CronMapperIntegrationTest#testDaysOfWeekUnixToQuartz: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.mapper.CronMapperIntegrationTest#testRangeOfTimeCron4jToQuartz: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.mapper.CronMapperIntegrationTest#testUnixToQuartzQuestionMarkRequired: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.mapper.CronMapperIntegrationTest#testEveryMinuteUnixToQuartz: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.mapper.CronMapperIntegrationTest#testSpecificTimeCron4jToQuartz: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.mapper.CronMapperIntegrationTest#testMoreThanOneInstanceCron4jToQuartz: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationZhTest#testEveryFiveMinutes: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationZhTest#testEveryMinuteBetween1100And1110: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationZhTest#testAtElevenThirty: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationZhTest#testEveryMinute: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.OpenIssuesTest#testBasicCron: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testForCron: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testExecutionTimesWithIncrementsGreaterThanDaysOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testLastExecutionEveryTwoWeeksStartingWithFirstDayOfYear: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testLastExecutionEveryTwoWeeksStartingWithFirstDayOfYearIssue249TzUTC: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testNextExecutionEveryTwoWeeksStartingWithFirstDayOfYear: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testExecutionTimesEveryTwoWeeksStartingWithFirstDayOfYear: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testQuartzCompatibilityIfDoYisQuestionMark: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testQuartzCompatibilityIfDoYisOmitted: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testCustomQuarterlySchedule: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testLastExecutionEveryTwoWeeksStartingWithFirstDayOfYearIssue249TzBuenosAires: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]"
        ],
        "validation_time": 19.230422973632812
    },
    {
        "patch": "private void buildPossibleExpressions(final CronDefinition cronDefinition) {\n    final List<CronParserField> sortedExpression = cronDefinition.getFieldDefinitions().stream()\n            .map(this::toCronParserField)\n            .sorted(CronParserField.createFieldTypeComparator())\n            .collect(Collectors.toList());\n\n    int numFields = sortedExpression.size();\n    if (numFields == 6 || numFields == 7) {\n        expressions.put(numFields, sortedExpression);\n    } else {\n        throw new IllegalArgumentException(\"Cron expression contains \" + numFields + \" parts but we expect one of [6, 7]\");\n    }\n\n    if (lastFieldIsOptional(sortedExpression)) {\n        expressions.put(numFields - 1, new ArrayList<>(sortedExpression.subList(0, numFields - 1)));\n    }\n}",
        "patched_method_loc": [
            55,
            72
        ],
        "status": "[FE]",
        "error_message": [
            "com.cronutils.Issue329Test#infiniteLoop: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue223Test#testEveryWednesdayOfEveryDayNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue332Test#testIsMatchDailightSavingsChange_loop: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserTest#testParseExtendedQuartzCronWithAsterixDoY: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserTest#testParseExtendedQuartzCron: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserTest#testParseExtendedQuartzCronWithQuestionMarkDoY: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserTest#testMultipleSpacesDoNotHurtParsingExpression: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserTest#testParseIncompleteEvery: java.lang.IllegalArgumentException: : Cron expression contains 1 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testDSTOverlap: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testLastExecutionDaysOfWeekOverMonthBoundary: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testEveryTwoMinRollsOverHour: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testWeekdayAndWithMixOfOnAndBetweenLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testEveryTenMinutesNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testCorrectMonthScaleForNextExecution1: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testCorrectMonthScaleForNextExecution2: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testEveryTuesdayAtThirdHourOfDayNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testEveryTuesdayAtThirdHourOfDayLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testWeekdayAndLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testWrongNextExecutionOnDSTEnd: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testNextExecutionProducesStackTraces: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testIsMatchForUnix01: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testIsMatchForUnix02: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testNextExecution2014: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testNextExecution2016: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testCorrectNextExecutionDoWForLeapYear: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#fuzzyHitReturnsVerySmallIntervalDuration: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#invalidDayInMonthCron: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testMondayWeekdayNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testLastExecutionDaylightSaving: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testDSTGap: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testNextExecutionDaylightSaving: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#exactHitReturnsFullIntervalDuration: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testCorrectNextExecutionDoW: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testMondayWeekdayLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue228Test#testFirstMondayOfTheMonthNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue228Test#testEveryWeekendFirstWeekOfMonthNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue228Test#testEveryWeekdaySecondWeekOfMonthNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue228Test#testEveryWeekendForthWeekOfMonthNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue228Test#testEveryWeekdayFirstWeekOfMonthNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue58UnixCronAsStringIntegrationTest#everyOddHourShouldBeParsedCorrectly: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue58UnixCronAsStringIntegrationTest#everyOddMinuteShouldBeParsedCorrectly: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue58UnixCronAsStringIntegrationTest#everyEvenHourShouldBeParsedCorrectly: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue58UnixCronAsStringIntegrationTest#everyEvenMinuteShouldBeParsedCorrectly: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue293Test#test: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue293Test#test: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue293Test#test: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue293Test#test: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testThreeRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 4 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing: java.lang.IllegalArgumentException: : Cron expression contains 3 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testFiveRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.definition.CronDefinitionIssue25IntegrationTest#testExecutionTime: java.lang.IllegalArgumentException: : Cron expression contains 3 parts but we expect one of [6, 7]",
            "com.cronutils.model.definition.CronDefinitionIssue25IntegrationTest#testParser: java.lang.IllegalArgumentException: : Cron expression contains 3 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationTest#testEveryFiveMinutes: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationTest#testEveryMinuteBetween1100And1110: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationTest#testDescribeIssue32Expression01: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationTest#testDescribeIssue32Expression02: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationTest#testAtElevenThirty: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationTest#testAtTwentyThreeFromMondayThroughFriday: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationTest#testEveryMinute: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue215Test#testFridayToSaturday: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue215Test#testWorkdayBugWithNextMonth: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.Issue218Test#testCronDefinitionExecutionTimeGenerator: java.lang.IllegalArgumentException: : Cron expression contains 3 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserCron4JIntegrationTest#testParseSunday: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserCron4JIntegrationTest#testParseIssue32Expression01: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserCron4JIntegrationTest#testParseIssue32Expression02: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserCron4JIntegrationTest#testParseStrictRangeEnforced01: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserCron4JIntegrationTest#testParseStrictRangeEnforced02: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserCron4JIntegrationTest#testParseLastDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCron4jIntegrationTest#testFixedDayOfMonthAndDayOfWeek: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCron4jIntegrationTest#testEveryWeekdayAt6: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCron4jIntegrationTest#testQuick: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCron4jIntegrationTest#testDayOfWeekOverridesAlwaysAtDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCron4jIntegrationTest#testForCron: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCron4jIntegrationTest#testDayOfMonthOverridesAlwaysAtDayOfWeek: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCron4jIntegrationTest#testNextExecutionOverNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCron4jIntegrationTest#testEvery15Minutes: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCron4jIntegrationTest#testEvery2Hours: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCron4jIntegrationTest#testRandomDayOfMonthAndDayOfWeek: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.CronTest#testEquivalent: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.CronTest#testSerialization: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.mapper.CronMapperIntegrationTest#testDaysOfWeekUnixToQuartz: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.mapper.CronMapperIntegrationTest#testRangeOfTimeCron4jToQuartz: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.mapper.CronMapperIntegrationTest#testUnixToQuartzQuestionMarkRequired: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.mapper.CronMapperIntegrationTest#testEveryMinuteUnixToQuartz: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.mapper.CronMapperIntegrationTest#testSpecificTimeCron4jToQuartz: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.mapper.CronMapperIntegrationTest#testMoreThanOneInstanceCron4jToQuartz: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationZhTest#testEveryFiveMinutes: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationZhTest#testEveryMinuteBetween1100And1110: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationZhTest#testAtElevenThirty: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationZhTest#testEveryMinute: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.OpenIssuesTest#testBasicCron: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testForCron: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testExecutionTimesWithIncrementsGreaterThanDaysOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testLastExecutionEveryTwoWeeksStartingWithFirstDayOfYear: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testLastExecutionEveryTwoWeeksStartingWithFirstDayOfYearIssue249TzUTC: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testNextExecutionEveryTwoWeeksStartingWithFirstDayOfYear: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testExecutionTimesEveryTwoWeeksStartingWithFirstDayOfYear: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testQuartzCompatibilityIfDoYisQuestionMark: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testQuartzCompatibilityIfDoYisOmitted: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testCustomQuarterlySchedule: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testLastExecutionEveryTwoWeeksStartingWithFirstDayOfYearIssue249TzBuenosAires: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]"
        ],
        "validation_time": 21.124186277389526
    },
    {
        "patch": "private void buildPossibleExpressions(final CronDefinition cronDefinition) {\n    List<CronParserField> sortedExpression = cronDefinition.getFieldDefinitions().stream()\n            .map(this::toCronParserField)\n            .sorted(CronParserField.createFieldTypeComparator())\n            .collect(Collectors.toList());\n\n    if (lastFieldIsOptional(sortedExpression)) {\n        expressions.put(sortedExpression.size(), new ArrayList<>(sortedExpression));\n        sortedExpression = sortedExpression.subList(0, sortedExpression.size() - 1);\n    }\n\n    expressions.put(sortedExpression.size(), sortedExpression);\n}",
        "patched_method_loc": [
            55,
            68
        ],
        "status": "[FE]",
        "error_message": [
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testThreeRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 4 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testFiveRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]"
        ],
        "validation_time": 18.96955370903015
    },
    {
        "patch": "private void buildPossibleExpressions(final CronDefinition cronDefinition) {\n    final List<CronParserField> sortedExpression = cronDefinition.getFieldDefinitions().stream()\n            .map(this::toCronParserField)\n            .sorted(CronParserField.createFieldTypeComparator())\n            .collect(Collectors.toList());\n\n    // Get the expected number of parts based on the cron definition\n    int expectedParts = cronDefinition.getFieldDefinitions().size();\n\n    if (sortedExpression.size() > expectedParts) {\n        throw new IllegalArgumentException(\"Cron expression contains \" + sortedExpression.size() + \" parts but we expect \" + expectedParts);\n    }\n\n    // Clear the existing expressions before adding new ones\n    expressions.clear();\n\n    // Add expressions based on the number of parts\n    for (int i = 0; i <= sortedExpression.size(); i++) {\n        expressions.put(i, new ArrayList<>(sortedExpression.subList(0, i)));\n    }\n}",
        "patched_method_loc": [
            55,
            76
        ],
        "status": "[FE]",
        "error_message": [
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testErrorAbout2Parts: java.lang.AssertionError: Expected : (an instance of java.lang.IllegalArgumentException and exception with message a string containing \"Cron expression contains 2 parts but we expect one of [6, 7]\")"
        ],
        "validation_time": 19.2477924823761
    },
    {
        "patch": "private void buildPossibleExpressions(final CronDefinition cronDefinition) {\n    final List<CronParserField> sortedExpression = cronDefinition.getFieldDefinitions().stream()\n            .map(this::toCronParserField)\n            .sorted(CronParserField.createFieldTypeComparator())\n            .collect(Collectors.toList());\n\n    if (sortedExpression.size() > 0 && lastFieldIsOptional(sortedExpression)) {\n        expressions.put(sortedExpression.size() - 1, new ArrayList<>(sortedExpression.subList(0, sortedExpression.size() - 1)));\n    }\n    expressions.put(sortedExpression.size(), sortedExpression);\n}",
        "patched_method_loc": [
            55,
            66
        ],
        "status": "[FE]",
        "error_message": [
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testThreeRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 4 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testFiveRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]"
        ],
        "validation_time": 19.111591577529907
    },
    {
        "patch": "private void buildPossibleExpressions(final CronDefinition cronDefinition) {\n    final List<CronParserField> sortedExpression = cronDefinition.getFieldDefinitions().stream()\n            .map(this::toCronParserField)\n            .sorted(CronParserField.createFieldTypeComparator())\n            .collect(Collectors.toList());\n\n    int expectedParts = cronDefinition.getFieldDefinitions().size();\n\n    if (sortedExpression.size() != expectedParts) {\n        throw new IllegalArgumentException(\"Cron expression contains \" + sortedExpression.size() + \" parts but we expect \" + expectedParts);\n    }\n\n    expressions.put(sortedExpression.size(), sortedExpression);\n}",
        "patched_method_loc": [
            55,
            69
        ],
        "status": "[FE]",
        "error_message": [
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEverySecond: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryFiveMinutesBetween14and15AndBetween18And19EveryDay: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testDescriptionDayOfWeek: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryDayFireAtNoon: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryMinuteBetween14and15EveryDay: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEvery45Seconds: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryDayFireAtTenFifteen: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryHour: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testCronAndWithRangesAndEveryExpressions: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryFiveMinutesBetween14and15EveryDay: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryDayEveryFourHoursFromHour2: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testIntervalMinutes: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testErrorAbout2Parts: java.lang.AssertionError: Expected : (an instance of java.lang.IllegalArgumentException and exception with message a string containing \"Cron expression contains 2 parts but we expect one of [6, 7]\")",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testIntervalSeconds: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testSunToSat: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testNLSupported: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testReportedErrorContainsSameExpressionAsProvided: java.lang.AssertionError: Expected : (an instance of java.lang.IllegalArgumentException and exception with message a string containing \"Invalid cron expression: 0/1 * * * * *. Both, a day-of-week AND a day-of-month parameter, are not supported.\")",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testRegressionDifferentMessageForException: java.lang.AssertionError: Expected : (an instance of java.lang.IllegalArgumentException and exception with message a string containing \"Invalid chars in expression! Expression: $ Invalid chars: $\")",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testLSupportedInDoMRange: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testLSupportedInDoM: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testLSupportedInDoMRangeNextExecutionCalculation: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testMissingExpressionAndInvalidCharsInErrorMessage: java.lang.AssertionError: Expected : (an instance of java.lang.IllegalArgumentException and exception with message a string containing \"Failed to parse '* * -1 * * ?'. Invalid expression! Expression: -1 does not describe a range. Negative numbers are not allowed.\")",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testErrorAboutMissingSteps: java.lang.AssertionError: Expected : (an instance of java.lang.IllegalArgumentException and exception with message a string containing \"Missing steps for expression: */\")",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testDescribeExpression: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.TestDescriptor#testEverySecondWithoutYear: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.validator.CronValidatorQuartzIntegrationTest#testQuestionMarkSupport: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testThreeRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 4 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testFiveRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testPeriodicIncrementalHoursIgnorePeriodBounds: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#nextExecutionNotFail: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#noDateTimeExceptionIsThrownGeneratingNextExecutionWithDayOfWeekFilters: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testSaturdayExecutionTime: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#bigNumbersOnDayOfMonthField: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testMinimumInterval: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testDayLightSavingsSwitch: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testHourlyIntervalTimeFromLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#validate31IsSupportedForDoM: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testDoesNotIgnoreMonthOrDayOfWeek: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionProducingInvalidPrintln: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testWeekdayExecutionTime: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#mustJumpToEndOfMonthIfCurrentMonthHasDesiredDay: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#noSpecificDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testTimeShiftingProperlyDone: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#noSpecificDayOfMonthEvaluatedOnLastDay: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionProducingInvalidValues: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testMultipleMinuteIntervalMatch: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#mustJumpToNextMonthIfCurrentMonthDoesNotHaveDesiredDay: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.Issue215Test#testFridayToSaturday: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.Issue215Test#testWorkdayBugWithNextMonth: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptLastDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptFirstDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptLastMonth: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptFirstMonth: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.Issue227Test#testProperDescriptorOutputWithSeconds: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.Issue227Test#testProperDescriptorOutput: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.Issue200Test#testMustMatchCronEvenIfNanoSecondsVaries: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.Issue200Test#testMatchExact: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testForCron: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [8]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testQuartzCompatibilityIfDoYisOmitted: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [8]"
        ],
        "validation_time": 19.17909574508667
    },
    {
        "patch": "private void buildPossibleExpressions(final CronDefinition cronDefinition) {\n    final List<CronParserField> sortedExpression = cronDefinition.getFieldDefinitions().stream()\n            .map(this::toCronParserField)\n            .sorted(CronParserField.createFieldTypeComparator())\n            .collect(Collectors.toList());\n\n    if (lastFieldIsOptional(sortedExpression)) {\n        expressions.put(sortedExpression.size() - 1, new ArrayList<>(sortedExpression.subList(0, sortedExpression.size() - 1)));\n    } else {\n        expressions.put(sortedExpression.size(), sortedExpression);\n    }\n}",
        "patched_method_loc": [
            55,
            67
        ],
        "status": "[FE]",
        "error_message": [
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryDayFireAtTenFifteenYear2005: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testCronAndWithRangeHours: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testCronWithAndHours: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryDayFireAtTenFifteen: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testDoWRange: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.parser.CronParserTest#testParseMulticron: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.parser.CronParserTest#testParseExtendedQuartzCronWithAsterixDoY: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserTest#testParseExtendedQuartzCron: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserTest#testParseExtendedQuartzCronWithQuestionMarkDoY: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserTest#testThatEveryMinuteIsPreserved: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.parser.CronParserTest#testParseEveryXyears: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testErrorAbout2Parts: java.lang.AssertionError: Expected : (an instance of java.lang.IllegalArgumentException and exception with message a string containing \"Cron expression contains 2 parts but we expect one of [6, 7]\")",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testDescribeExpressionWithQuestionMarkAndWeekdays: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testSingleDoWStringMapping: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#supportQuartzCronExpressionIncrementsOnYears: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testMonthRangeStringMapping: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testSingleMonthStringMapping: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testParseExpressionWithQuestionMarkAndWeekdays: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testJulyMonthAsStringConsideredSpecialChar: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testDoWRangeStringMapping: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.utils.descriptor.TestDescriptor#testEverySecond: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.utils.descriptor.TestDescriptor#testEvery1SecondGerman: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.utils.descriptor.TestDescriptor#testEvery2SecondsGerman: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.utils.descriptor.TestDescriptor#testEverySecondGerman: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.utils.descriptor.TestDescriptor#testEvery2Seconds: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.utils.descriptor.TestDescriptor#testEverySecond2WithoutYear: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.utils.descriptor.TestDescriptor#testEvery1Second: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.utils.descriptor.TestDescriptor#testEverySecond2: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.validator.CronValidatorQuartzIntegrationTest#testMonthRangeMappingIsValid: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.validator.CronValidatorQuartzIntegrationTest#testDayOfWeekMappingIsValid: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.validator.CronValidatorQuartzIntegrationTest#testSingleMonthMappingIsValid: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.validator.CronValidatorQuartzIntegrationTest#testDayOfWeekRangeMappingIsValid: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.Issue338Test#testEverySecondInFrench: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.Issue143Test#testCase1: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.Issue143Test#testCase2: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.Issue143Test#testCase3: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.Issue143Test#testCase4: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testThreeRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 4 parts but we expect one of [6]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testFiveRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionRightDoWForFixedYear: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testTimeToNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#lastExecutionDec31NotFail: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionRightDoWForFixedMonth: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionTimeProperlySet2: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testShiftTo24thHour: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testExecutionTimeForRanges: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testCronWithFirstWorkDayOfWeek: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testForCron: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testDayOfWeekMapping: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testMultipleMinuteIntervalTimeFromLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testShiftTo32ndDay: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#lastDayOfTheWeek: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testMonthRangeExecutionTime: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testTimeFromLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#validateIsMatchForRangeOfDates: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#descriptionForExpressionTellsWrongDoW: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionEverySecond: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionTimeProperlySet: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testLastExecutionTimeForFixedMonth: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.Issue218Test#testCronDefinitionExecutionTimeGenerator: java.lang.IllegalArgumentException: : Cron expression contains 3 parts but we expect one of [2]",
            "com.cronutils.model.CronTest#testEquivalent: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.CronTest#testSerialization: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.CronTest#testAsScheduleExpression: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.mapper.CronMapperIntegrationTest#testSpecificTimeQuartzToCron4j: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.mapper.CronMapperIntegrationTest#testMoreThanOneInstanceQuartzToCron4j: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.mapper.CronMapperIntegrationTest#testRangeOfTimeQuartzToCron4j: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.CompositeCronTest#validateThrowsExceptionEmptyCrons: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.CompositeCronTest#validate: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.CompositeCronTest#asString: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.CompositeCronTest#retrieveFieldsAsMap: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.CompositeCronTest#equivalent: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.CompositeCronTest#testExampleIssue318: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.CompositeCronTest#weDoNotSupportCronsWithDifferentDefinitions: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.CompositeCronTest#retrieve: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.CompositeCronTest#equivalent1: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.CompositeCronTest#getCronDefinition: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.CompositeCronTest#testIssue263: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.CompositeCronTest#weDoNotSupportCompositeWithoutCrons: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testForCron: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testExecutionTimesWithIncrementsGreaterThanDaysOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testLastExecutionEveryTwoWeeksStartingWithFirstDayOfYear: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testLastExecutionEveryTwoWeeksStartingWithFirstDayOfYearIssue249TzUTC: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testNextExecutionEveryTwoWeeksStartingWithFirstDayOfYear: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testExecutionTimesEveryTwoWeeksStartingWithFirstDayOfYear: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testQuartzCompatibilityIfDoYisQuestionMark: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testQuartzCompatibilityIfDoYisOmitted: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testCustomQuarterlySchedule: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testLastExecutionEveryTwoWeeksStartingWithFirstDayOfYearIssue249TzBuenosAires: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [7]"
        ],
        "validation_time": 21.1625714302063
    },
    {
        "patch": "private void buildPossibleExpressions(final CronDefinition cronDefinition) {\n    final List<CronParserField> sortedExpression = cronDefinition.getFieldDefinitions().stream()\n            .map(this::toCronParserField)\n            .sorted(CronParserField.createFieldTypeComparator())\n            .collect(Collectors.toList());\n\n    if (sortedExpression.size() > 0 && lastFieldIsOptional(sortedExpression)) {\n        expressions.put(sortedExpression.size() - 1, new ArrayList<>(sortedExpression.subList(0, sortedExpression.size() - 1)));\n    }\n    expressions.put(sortedExpression.size(), sortedExpression);\n}",
        "patched_method_loc": [
            55,
            66
        ],
        "status": "[FE]",
        "error_message": [
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testThreeRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 4 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testFiveRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]"
        ],
        "validation_time": 19.307270526885986
    },
    {
        "patch": "private void buildPossibleExpressions(final CronDefinition cronDefinition) {\n    final List<CronParserField> sortedExpression = cronDefinition.getFieldDefinitions().stream()\n            .map(this::toCronParserField)\n            .sorted(CronParserField.createFieldTypeComparator())\n            .collect(Collectors.toList());\n\n    if (lastFieldIsOptional(sortedExpression)) {\n        expressions.put(sortedExpression.size() - 1, new ArrayList<>(sortedExpression.subList(0, sortedExpression.size() - 1)));\n    }\n    \n    expressions.put(sortedExpression.size(), sortedExpression);\n    \n    if (sortedExpression.size() == 4 && !cronDefinition.isStrictRanges()) {\n        expressions.put(6, sortedExpression);\n        expressions.put(7, sortedExpression);\n    }\n}",
        "patched_method_loc": [
            55,
            72
        ],
        "status": "[FE]",
        "error_message": [
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testThreeRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 4 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testFiveRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]"
        ],
        "validation_time": 19.611806392669678
    },
    {
        "patch": "private void buildPossibleExpressions(final CronDefinition cronDefinition) {\n    final List<CronParserField> sortedExpression = cronDefinition.getFieldDefinitions().stream()\n            .map(this::toCronParserField)\n            .sorted(CronParserField.createFieldTypeComparator())\n            .collect(Collectors.toList());\n\n    if (lastFieldIsOptional(sortedExpression)) {\n        expressions.put(sortedExpression.size() - 1, new ArrayList<>(sortedExpression.subList(0, sortedExpression.size())));\n    }\n    expressions.put(sortedExpression.size(), sortedExpression);\n}",
        "patched_method_loc": [
            55,
            66
        ],
        "status": "[FE]",
        "error_message": [
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEverySecond: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryFiveMinutesBetween14and15AndBetween18And19EveryDay: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testDescriptionDayOfWeek: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryDayFireAtNoon: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryMinuteBetween14and15EveryDay: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEvery45Seconds: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryDayFireAtTenFifteen: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryHour: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testCronAndWithRangesAndEveryExpressions: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryFiveMinutesBetween14and15EveryDay: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryDayEveryFourHoursFromHour2: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testIntervalMinutes: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testIntervalSeconds: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testSunToSat: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testNLSupported: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testReportedErrorContainsSameExpressionAsProvided: java.lang.AssertionError: Expected : (an instance of java.lang.IllegalArgumentException and exception with message a string containing \"Invalid cron expression: 0/1 * * * * *. Both, a day-of-week AND a day-of-month parameter, are not supported.\")",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testLSupportedInDoMRange: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testLSupportedInRange: java.lang.Exception: : Unexpected exception, expected<java.lang.IllegalArgumentException> but was<java.lang.ArrayIndexOutOfBoundsException>",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testLSupportedInDoM: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testLSupportedInDoMRangeNextExecutionCalculation: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testDescribeExpression: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.utils.descriptor.TestDescriptor#testEverySecondWithoutYear: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.validator.CronValidatorQuartzIntegrationTest#testQuestionMarkSupport: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testThreeRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 4 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth: java.lang.ArrayIndexOutOfBoundsException: : 5",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testFiveRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testPeriodicIncrementalHoursIgnorePeriodBounds: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#nextExecutionNotFail: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#noDateTimeExceptionIsThrownGeneratingNextExecutionWithDayOfWeekFilters: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testSaturdayExecutionTime: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#bigNumbersOnDayOfMonthField: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testMinimumInterval: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testDayLightSavingsSwitch: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testHourlyIntervalTimeFromLastExecution: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#validate31IsSupportedForDoM: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testDoesNotIgnoreMonthOrDayOfWeek: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionProducingInvalidPrintln: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testWeekdayExecutionTime: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#mustJumpToEndOfMonthIfCurrentMonthHasDesiredDay: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#noSpecificDayOfMonth: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testTimeShiftingProperlyDone: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#noSpecificDayOfMonthEvaluatedOnLastDay: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionProducingInvalidValues: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testMultipleMinuteIntervalMatch: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#mustJumpToNextMonthIfCurrentMonthDoesNotHaveDesiredDay: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.Issue215Test#testFridayToSaturday: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.Issue215Test#testWorkdayBugWithNextMonth: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptLastDayOfMonth: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptFirstDayOfMonth: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.utils.descriptor.Issue281Test#shouldThrowExceptionWhenMonthExceeded: java.lang.Exception: : Unexpected exception, expected<java.lang.IllegalArgumentException> but was<java.lang.ArrayIndexOutOfBoundsException>",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptLastMonth: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptFirstMonth: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.utils.descriptor.Issue227Test#testProperDescriptorOutputWithSeconds: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.utils.descriptor.Issue227Test#testProperDescriptorOutput: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.Issue200Test#testMustMatchCronEvenIfNanoSecondsVaries: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.Issue200Test#testMatchExact: java.lang.ArrayIndexOutOfBoundsException: : 6",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testForCron: java.lang.ArrayIndexOutOfBoundsException: : 7",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testQuartzCompatibilityIfDoYisOmitted: java.lang.ArrayIndexOutOfBoundsException: : 7"
        ],
        "validation_time": 19.402573585510254
    },
    {
        "patch": "private void buildPossibleExpressions(final CronDefinition cronDefinition) {\n    final List<CronParserField> sortedExpression = cronDefinition.getFieldDefinitions().stream()\n            .map(this::toCronParserField)\n            .sorted(CronParserField.createFieldTypeComparator())\n            .collect(Collectors.toList());\n\n    int expectedParts = CronDefinitionBuilder.instanceDefinitionFor(cronDefinition).parts().size();\n\n    if (sortedExpression.size() != expectedParts) {\n        throw new IllegalArgumentException(\"Cron expression contains \" + sortedExpression.size() + \" parts but we expect \" + expectedParts);\n    }\n\n    expressions.put(sortedExpression.size(), sortedExpression);\n}",
        "patched_method_loc": [
            55,
            69
        ],
        "status": "[CE]",
        "error_message": [
            "[61,25] cannot find symbol\n  symbol:   variable CronDefinitionBuilder"
        ],
        "validation_time": 2.348466157913208
    },
    {
        "patch": "private void buildPossibleExpressions(final CronDefinition cronDefinition) {\n    final List<CronParserField> sortedExpression = cronDefinition.getFieldDefinitions().stream()\n            .map(this::toCronParserField)\n            .sorted(CronParserField.createFieldTypeComparator())\n            .collect(Collectors.toList());\n\n    if (sortedExpression.size() > 6) {\n        throw new IllegalArgumentException(\"Cron expression contains \" + sortedExpression.size() + \" parts but we expect one of [6, 7]\");\n    }\n\n    for (int i = 0; i < sortedExpression.size(); i++) {\n        expressions.put(i, new ArrayList<>(sortedExpression.subList(0, i)));\n    }\n    expressions.put(sortedExpression.size(), sortedExpression);\n}",
        "patched_method_loc": [
            55,
            70
        ],
        "status": "[FE]",
        "error_message": [
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEverySecond: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryDayFireAtTenFifteenYear2005: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testCronAndWithRangeHours: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testCronWithAndHours: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryFiveMinutesBetween14and15AndBetween18And19EveryDay: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testDescriptionDayOfWeek: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryDayFireAtNoon: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryMinuteBetween14and15EveryDay: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEvery45Seconds: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryDayFireAtTenFifteen: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryHour: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testCronAndWithRangesAndEveryExpressions: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testDoWRange: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryFiveMinutesBetween14and15EveryDay: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryDayEveryFourHoursFromHour2: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserTest#testParseMulticron: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserTest#testParseExtendedQuartzCronWithAsterixDoY: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserTest#testParseExtendedQuartzCron: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserTest#testParseExtendedQuartzCronWithQuestionMarkDoY: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserTest#testThatEveryMinuteIsPreserved: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserTest#testParseEveryXyears: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testIntervalMinutes: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testEveryXYears: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testErrorAbout2Parts: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testDescribeExpressionWithQuestionMarkAndWeekdays: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testSingleDoWStringMapping: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testIntervalSeconds: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#supportQuartzCronExpressionIncrementsOnYears: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testSunToSat: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testNLSupported: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testInvalidCharsDetectedWithHashExpression1: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testInvalidCharsDetectedWithHashExpression2: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testMonthRangeStringMapping: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testInvalidCharsDetectedWithSingleSpecialChar: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testReportedErrorContainsSameExpressionAsProvided: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testRegressionDifferentMessageForException: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testInvalidCharsDetected: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testLSupportedInDoMRange: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testLSupportedInRange: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testRejectIllegalMonthArgument: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testLSupportedInDoM: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testSingleMonthStringMapping: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testParseExpressionWithQuestionMarkAndWeekdays: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testLSupportedInDoMRangeNextExecutionCalculation: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testJulyMonthAsStringConsideredSpecialChar: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testDoMAndDoWParametersInvalidForQuartz: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testMissingExpressionAndInvalidCharsInErrorMessage: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testDoWRangeStringMapping: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testErrorAboutMissingSteps: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testDescribeExpression: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.TestDescriptor#testEverySecond: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.TestDescriptor#testEvery1SecondGerman: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.TestDescriptor#testEvery2SecondsGerman: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.TestDescriptor#testEverySecondGerman: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.TestDescriptor#testEvery2Seconds: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.TestDescriptor#testEverySecond2WithoutYear: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.TestDescriptor#testEverySecondWithoutYear: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.TestDescriptor#testEvery1Second: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.TestDescriptor#testEverySecond2: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.validator.CronValidatorQuartzIntegrationTest#testMonthRangeMappingIsValid: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.validator.CronValidatorQuartzIntegrationTest#testDayOfWeekMappingIsValid: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.validator.CronValidatorQuartzIntegrationTest#testSingleMonthMappingIsValid: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.validator.CronValidatorQuartzIntegrationTest#testQuestionMarkSupport: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.validator.CronValidatorQuartzIntegrationTest#testDayOfWeekRangeMappingIsValid: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.Issue338Test#testEverySecondInFrench: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.Issue143Test#testCase1: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.Issue143Test#testCase2: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.Issue143Test#testCase3: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.Issue143Test#testCase4: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testThreeRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testFiveRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionRightDoWForFixedYear: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testPeriodicIncrementalHoursIgnorePeriodBounds: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testTimeToNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#lastExecutionDec31NotFail: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionRightDoWForFixedMonth: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#nextExecutionNotFail: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#noDateTimeExceptionIsThrownGeneratingNextExecutionWithDayOfWeekFilters: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionTimeProperlySet2: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testShiftTo24thHour: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testExecutionTimeForRanges: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testSaturdayExecutionTime: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#bigNumbersOnDayOfMonthField: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testCronWithFirstWorkDayOfWeek: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testForCron: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testDayOfWeekMapping: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testMinimumInterval: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testMultipleMinuteIntervalTimeFromLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testShiftTo32ndDay: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#lastDayOfTheWeek: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testDayLightSavingsSwitch: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testIllegalQuestionMarkValue: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testMonthRangeExecutionTime: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testHourlyIntervalTimeFromLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#validate31IsSupportedForDoM: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testTimeFromLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testDoesNotIgnoreMonthOrDayOfWeek: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionProducingInvalidPrintln: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testWeekdayExecutionTime: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#mustJumpToEndOfMonthIfCurrentMonthHasDesiredDay: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#noSpecificDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#validateIsMatchForRangeOfDates: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#descriptionForExpressionTellsWrongDoW: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionEverySecond: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testTimeShiftingProperlyDone: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#noSpecificDayOfMonthEvaluatedOnLastDay: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionProducingInvalidValues: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testMultipleMinuteIntervalMatch: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionTimeProperlySet: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#mustJumpToNextMonthIfCurrentMonthDoesNotHaveDesiredDay: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testLastExecutionTimeForFixedMonth: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.Issue215Test#testFridayToSaturday: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.Issue215Test#testWorkdayBugWithNextMonth: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.CronTest#testEquivalent: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.CronTest#testSerialization: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.CronTest#testAsScheduleExpression: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptLastDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptFirstDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptLastMonth: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptFirstMonth: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.mapper.CronMapperIntegrationTest#testSpecificTimeQuartzToCron4j: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.mapper.CronMapperIntegrationTest#testMoreThanOneInstanceQuartzToCron4j: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.mapper.CronMapperIntegrationTest#testRangeOfTimeQuartzToCron4j: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.Issue227Test#testProperDescriptorOutputWithSeconds: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.Issue227Test#testProperDescriptorOutput: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.Issue200Test#testMustMatchCronEvenIfNanoSecondsVaries: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.Issue200Test#testMatchExact: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.CompositeCronTest#validateThrowsExceptionEmptyCrons: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.CompositeCronTest#validate: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.CompositeCronTest#asString: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.CompositeCronTest#retrieveFieldsAsMap: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.CompositeCronTest#equivalent: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.CompositeCronTest#testExampleIssue318: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.CompositeCronTest#weDoNotSupportCronsWithDifferentDefinitions: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.CompositeCronTest#retrieve: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.CompositeCronTest#equivalent1: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.CompositeCronTest#getCronDefinition: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.CompositeCronTest#testIssue263: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.CompositeCronTest#weDoNotSupportCompositeWithoutCrons: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testForCron: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testExecutionTimesWithIncrementsGreaterThanDaysOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testLastExecutionEveryTwoWeeksStartingWithFirstDayOfYear: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testLastExecutionEveryTwoWeeksStartingWithFirstDayOfYearIssue249TzUTC: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testNextExecutionEveryTwoWeeksStartingWithFirstDayOfYear: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testExecutionTimesEveryTwoWeeksStartingWithFirstDayOfYear: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testQuartzCompatibilityIfDoYisQuestionMark: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testQuartzCompatibilityIfDoYisOmitted: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testCustomQuarterlySchedule: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testLastExecutionEveryTwoWeeksStartingWithFirstDayOfYearIssue249TzBuenosAires: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]"
        ],
        "validation_time": 19.055510759353638
    },
    {
        "patch": "private void buildPossibleExpressions(final CronDefinition cronDefinition) {\n    final List<CronParserField> sortedExpression = cronDefinition.getFieldDefinitions().stream()\n            .map(this::toCronParserField)\n            .sorted(CronParserField.createFieldTypeComparator())\n            .collect(Collectors.toList());\n\n    if (sortedExpression.size() == 6 || sortedExpression.size() == 7) {\n        expressions.put(sortedExpression.size(), sortedExpression);\n    } else {\n        // Handle the case where the size is not 6 or 7\n        if (sortedExpression.size() > 0) {\n            expressions.put(sortedExpression.size() - 1, new ArrayList<>(sortedExpression.subList(0, sortedExpression.size() - 1)));\n        }\n    }\n}",
        "patched_method_loc": [
            55,
            70
        ],
        "status": "[FE]",
        "error_message": [
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEverySecond: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryFiveMinutesBetween14and15AndBetween18And19EveryDay: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testDescriptionDayOfWeek: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryDayFireAtNoon: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryMinuteBetween14and15EveryDay: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEvery45Seconds: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryDayFireAtTenFifteen: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryHour: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testCronAndWithRangesAndEveryExpressions: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryFiveMinutesBetween14and15EveryDay: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryDayEveryFourHoursFromHour2: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.Issue329Test#infiniteLoop: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.Issue223Test#testEveryWednesdayOfEveryDayNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.Issue332Test#testIsMatchDailightSavingsChange_loop: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.parser.CronParserTest#testParseExtendedQuartzCronWithAsterixDoY: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserTest#testParseExtendedQuartzCron: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserTest#testParseExtendedQuartzCronWithQuestionMarkDoY: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserTest#testMultipleSpacesDoNotHurtParsingExpression: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.parser.CronParserTest#testParseIncompleteEvery: java.lang.AssertionError: Expected : (an instance of java.lang.IllegalArgumentException and exception with message a string containing \"Missing steps for expression: */\")",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testIntervalMinutes: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testErrorAbout2Parts: java.lang.AssertionError: Expected : (an instance of java.lang.IllegalArgumentException and exception with message a string containing \"Cron expression contains 2 parts but we expect one of [6, 7]\")",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testIntervalSeconds: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testSunToSat: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testNLSupported: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testReportedErrorContainsSameExpressionAsProvided: java.lang.AssertionError: Expected : (an instance of java.lang.IllegalArgumentException and exception with message a string containing \"Invalid cron expression: 0/1 * * * * *. Both, a day-of-week AND a day-of-month parameter, are not supported.\")",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testRegressionDifferentMessageForException: java.lang.AssertionError: Expected : (an instance of java.lang.IllegalArgumentException and exception with message a string containing \"Invalid chars in expression! Expression: $ Invalid chars: $\")",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testLSupportedInDoMRange: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testLSupportedInDoM: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testLSupportedInDoMRangeNextExecutionCalculation: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testMissingExpressionAndInvalidCharsInErrorMessage: java.lang.AssertionError: Expected : (an instance of java.lang.IllegalArgumentException and exception with message a string containing \"Failed to parse '* * -1 * * ?'. Invalid expression! Expression: -1 does not describe a range. Negative numbers are not allowed.\")",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testErrorAboutMissingSteps: java.lang.AssertionError: Expected : (an instance of java.lang.IllegalArgumentException and exception with message a string containing \"Missing steps for expression: */\")",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testDescribeExpression: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testDSTOverlap: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testLastExecutionDaysOfWeekOverMonthBoundary: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testEveryTwoMinRollsOverHour: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testWeekdayAndWithMixOfOnAndBetweenLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testEveryTenMinutesNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testCorrectMonthScaleForNextExecution1: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testCorrectMonthScaleForNextExecution2: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testEveryTuesdayAtThirdHourOfDayNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testEveryTuesdayAtThirdHourOfDayLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testWeekdayAndLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testWrongNextExecutionOnDSTEnd: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testNextExecutionProducesStackTraces: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testIsMatchForUnix01: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testIsMatchForUnix02: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testNextExecution2014: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testNextExecution2016: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testCorrectNextExecutionDoWForLeapYear: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#fuzzyHitReturnsVerySmallIntervalDuration: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#invalidDayInMonthCron: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testMondayWeekdayNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testLastExecutionDaylightSaving: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testDSTGap: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testNextExecutionDaylightSaving: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#exactHitReturnsFullIntervalDuration: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testCorrectNextExecutionDoW: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.generator.ExecutionTimeUnixIntegrationTest#testMondayWeekdayLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.Issue228Test#testFirstMondayOfTheMonthNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.Issue228Test#testEveryWeekendFirstWeekOfMonthNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.Issue228Test#testEveryWeekdaySecondWeekOfMonthNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.Issue228Test#testEveryWeekendForthWeekOfMonthNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.Issue228Test#testEveryWeekdayFirstWeekOfMonthNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.utils.descriptor.TestDescriptor#testEverySecondWithoutYear: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.validator.CronValidatorQuartzIntegrationTest#testQuestionMarkSupport: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.Issue58UnixCronAsStringIntegrationTest#everyOddHourShouldBeParsedCorrectly: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.Issue58UnixCronAsStringIntegrationTest#everyOddMinuteShouldBeParsedCorrectly: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.Issue58UnixCronAsStringIntegrationTest#everyEvenHourShouldBeParsedCorrectly: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.Issue58UnixCronAsStringIntegrationTest#everyEvenMinuteShouldBeParsedCorrectly: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.Issue293Test#test: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.Issue293Test#test: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.Issue293Test#test: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.Issue293Test#test: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testThreeRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 4 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testMatchWorksAsExpectedForCustomCronsWhenPreviousOrNextOccurrenceIsMissing: java.lang.IllegalArgumentException: : Cron expression contains 3 parts but we expect one of [2]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testFiveRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testPeriodicIncrementalHoursIgnorePeriodBounds: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#nextExecutionNotFail: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#noDateTimeExceptionIsThrownGeneratingNextExecutionWithDayOfWeekFilters: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testSaturdayExecutionTime: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#bigNumbersOnDayOfMonthField: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testMinimumInterval: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testDayLightSavingsSwitch: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testHourlyIntervalTimeFromLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#validate31IsSupportedForDoM: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testDoesNotIgnoreMonthOrDayOfWeek: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionProducingInvalidPrintln: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testWeekdayExecutionTime: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#mustJumpToEndOfMonthIfCurrentMonthHasDesiredDay: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#noSpecificDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testTimeShiftingProperlyDone: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#noSpecificDayOfMonthEvaluatedOnLastDay: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionProducingInvalidValues: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testMultipleMinuteIntervalMatch: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#mustJumpToNextMonthIfCurrentMonthDoesNotHaveDesiredDay: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.definition.CronDefinitionIssue25IntegrationTest#testExecutionTime: java.lang.IllegalArgumentException: : Cron expression contains 3 parts but we expect one of [2]",
            "com.cronutils.model.definition.CronDefinitionIssue25IntegrationTest#testParser: java.lang.IllegalArgumentException: : Cron expression contains 3 parts but we expect one of [2]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationTest#testEveryFiveMinutes: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationTest#testEveryMinuteBetween1100And1110: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationTest#testDescribeIssue32Expression01: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationTest#testDescribeIssue32Expression02: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationTest#testAtElevenThirty: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationTest#testAtTwentyThreeFromMondayThroughFriday: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationTest#testEveryMinute: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.Issue215Test#testFridayToSaturday: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.Issue215Test#testWorkdayBugWithNextMonth: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.Issue218Test#testCronDefinitionExecutionTimeGenerator: java.lang.IllegalArgumentException: : Cron expression contains 3 parts but we expect one of [2]",
            "com.cronutils.parser.CronParserCron4JIntegrationTest#testParseSunday: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.parser.CronParserCron4JIntegrationTest#testParseIssue32Expression01: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.parser.CronParserCron4JIntegrationTest#testParseIssue32Expression02: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.parser.CronParserCron4JIntegrationTest#testParseStrictRangeEnforced01: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.parser.CronParserCron4JIntegrationTest#testParseLastDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.ExecutionTimeCron4jIntegrationTest#testFixedDayOfMonthAndDayOfWeek: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.ExecutionTimeCron4jIntegrationTest#testEveryWeekdayAt6: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.ExecutionTimeCron4jIntegrationTest#testQuick: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.ExecutionTimeCron4jIntegrationTest#testDayOfWeekOverridesAlwaysAtDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.ExecutionTimeCron4jIntegrationTest#testForCron: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.ExecutionTimeCron4jIntegrationTest#testDayOfMonthOverridesAlwaysAtDayOfWeek: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.ExecutionTimeCron4jIntegrationTest#testNextExecutionOverNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.ExecutionTimeCron4jIntegrationTest#testEvery15Minutes: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.ExecutionTimeCron4jIntegrationTest#testEvery2Hours: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.time.ExecutionTimeCron4jIntegrationTest#testRandomDayOfMonthAndDayOfWeek: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.CronTest#testEquivalent: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.model.CronTest#testSerialization: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptLastDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptFirstDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptLastMonth: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptFirstMonth: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.mapper.CronMapperIntegrationTest#testDaysOfWeekUnixToQuartz: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.mapper.CronMapperIntegrationTest#testRangeOfTimeCron4jToQuartz: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.mapper.CronMapperIntegrationTest#testUnixToQuartzQuestionMarkRequired: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.mapper.CronMapperIntegrationTest#testEveryMinuteUnixToQuartz: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.mapper.CronMapperIntegrationTest#testSpecificTimeCron4jToQuartz: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.mapper.CronMapperIntegrationTest#testMoreThanOneInstanceCron4jToQuartz: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.utils.descriptor.Issue227Test#testProperDescriptorOutputWithSeconds: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.Issue227Test#testProperDescriptorOutput: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationZhTest#testEveryFiveMinutes: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationZhTest#testEveryMinuteBetween1100And1110: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationZhTest#testAtElevenThirty: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.utils.descriptor.CronDescriptorCron4jIntegrationZhTest#testEveryMinute: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.OpenIssuesTest#testBasicCron: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [4]",
            "com.cronutils.Issue200Test#testMustMatchCronEvenIfNanoSecondsVaries: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.Issue200Test#testMatchExact: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testForCron: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testExecutionTimesWithIncrementsGreaterThanDaysOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testLastExecutionEveryTwoWeeksStartingWithFirstDayOfYear: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testLastExecutionEveryTwoWeeksStartingWithFirstDayOfYearIssue249TzUTC: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testNextExecutionEveryTwoWeeksStartingWithFirstDayOfYear: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testExecutionTimesEveryTwoWeeksStartingWithFirstDayOfYear: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testQuartzCompatibilityIfDoYisQuestionMark: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testCustomQuarterlySchedule: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testLastExecutionEveryTwoWeeksStartingWithFirstDayOfYearIssue249TzBuenosAires: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [7]"
        ],
        "validation_time": 20.927229404449463
    },
    {
        "patch": "private void buildPossibleExpressions(final CronDefinition cronDefinition) {\n    final List<CronParserField> sortedExpression = cronDefinition.getFieldDefinitions().stream()\n            .map(this::toCronParserField)\n            .sorted(CronParserField.createFieldTypeComparator())\n            .collect(Collectors.toList());\n\n    if (sortedExpression.size() > 0) {\n        expressions.put(sortedExpression.size(), new ArrayList<>(sortedExpression));\n        if (lastFieldIsOptional(sortedExpression)) {\n            expressions.put(sortedExpression.size() - 1, new ArrayList<>(sortedExpression.subList(0, sortedExpression.size() - 1)));\n        }\n    }\n}",
        "patched_method_loc": [
            55,
            68
        ],
        "status": "[FE]",
        "error_message": [
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testThreeRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 4 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testFiveRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6, 7]"
        ],
        "validation_time": 20.728270769119263
    },
    {
        "patch": "private void buildPossibleExpressions(final CronDefinition cronDefinition) {\n    final List<CronParserField> sortedExpression = cronDefinition.getFieldDefinitions().stream()\n            .map(this::toCronParserField)\n            .sorted(CronParserField.createFieldTypeComparator())\n            .collect(Collectors.toList());\n\n    int expectedSize = cronDefinition.getFieldDefinitions().size();\n    int actualSize = sortedExpression.size();\n\n    if (actualSize == expectedSize) {\n        expressions.put(actualSize, sortedExpression);\n    } else if (actualSize == expectedSize + 1) {\n        expressions.put(actualSize - 1, new ArrayList<>(sortedExpression.subList(0, expectedSize)));\n        expressions.put(actualSize, sortedExpression);\n    } else {\n        throw new IllegalArgumentException(\"Cron expression contains \" + actualSize + \" parts but we expect one of [\" + expectedSize + \", \" + (expectedSize + 1) + \"]\");\n    }\n}",
        "patched_method_loc": [
            55,
            73
        ],
        "status": "[FE]",
        "error_message": [
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEverySecond: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryFiveMinutesBetween14and15AndBetween18And19EveryDay: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testDescriptionDayOfWeek: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryDayFireAtNoon: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryMinuteBetween14and15EveryDay: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEvery45Seconds: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryDayFireAtTenFifteen: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryHour: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testCronAndWithRangesAndEveryExpressions: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryFiveMinutesBetween14and15EveryDay: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryDayEveryFourHoursFromHour2: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testIntervalMinutes: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testErrorAbout2Parts: java.lang.AssertionError: Expected : (an instance of java.lang.IllegalArgumentException and exception with message a string containing \"Cron expression contains 2 parts but we expect one of [6, 7]\")",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testIntervalSeconds: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testSunToSat: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testNLSupported: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testReportedErrorContainsSameExpressionAsProvided: java.lang.AssertionError: Expected : (an instance of java.lang.IllegalArgumentException and exception with message a string containing \"Invalid cron expression: 0/1 * * * * *. Both, a day-of-week AND a day-of-month parameter, are not supported.\")",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testRegressionDifferentMessageForException: java.lang.AssertionError: Expected : (an instance of java.lang.IllegalArgumentException and exception with message a string containing \"Invalid chars in expression! Expression: $ Invalid chars: $\")",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testLSupportedInDoMRange: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testLSupportedInDoM: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testLSupportedInDoMRangeNextExecutionCalculation: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testMissingExpressionAndInvalidCharsInErrorMessage: java.lang.AssertionError: Expected : (an instance of java.lang.IllegalArgumentException and exception with message a string containing \"Failed to parse '* * -1 * * ?'. Invalid expression! Expression: -1 does not describe a range. Negative numbers are not allowed.\")",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testErrorAboutMissingSteps: java.lang.AssertionError: Expected : (an instance of java.lang.IllegalArgumentException and exception with message a string containing \"Missing steps for expression: */\")",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testDescribeExpression: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.TestDescriptor#testEverySecondWithoutYear: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.validator.CronValidatorQuartzIntegrationTest#testQuestionMarkSupport: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testThreeRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 4 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testCronExpressionBetweenDayOfWeekValueGeneratorCorrectFirstDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [6]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testFiveRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 5 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testPeriodicIncrementalHoursIgnorePeriodBounds: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#nextExecutionNotFail: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#noDateTimeExceptionIsThrownGeneratingNextExecutionWithDayOfWeekFilters: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testSaturdayExecutionTime: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#bigNumbersOnDayOfMonthField: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testMinimumInterval: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testDayLightSavingsSwitch: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testHourlyIntervalTimeFromLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#validate31IsSupportedForDoM: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testDoesNotIgnoreMonthOrDayOfWeek: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionProducingInvalidPrintln: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testWeekdayExecutionTime: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#mustJumpToEndOfMonthIfCurrentMonthHasDesiredDay: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#noSpecificDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testTimeShiftingProperlyDone: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#noSpecificDayOfMonthEvaluatedOnLastDay: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionProducingInvalidValues: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testMultipleMinuteIntervalMatch: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#mustJumpToNextMonthIfCurrentMonthDoesNotHaveDesiredDay: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.Issue215Test#testFridayToSaturday: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.Issue215Test#testWorkdayBugWithNextMonth: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptLastDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptFirstDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptLastMonth: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptFirstMonth: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.Issue227Test#testProperDescriptorOutputWithSeconds: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.utils.descriptor.Issue227Test#testProperDescriptorOutput: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.Issue200Test#testMustMatchCronEvenIfNanoSecondsVaries: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.Issue200Test#testMatchExact: java.lang.IllegalArgumentException: : Cron expression contains 6 parts but we expect one of [7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testForCron: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [8]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testQuartzCompatibilityIfDoYisOmitted: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [8]"
        ],
        "validation_time": 19.1630756855011
    },
    {
        "patch": "private void buildPossibleExpressions(final CronDefinition cronDefinition) {\n    final List<CronParserField> sortedExpression = cronDefinition.getFieldDefinitions().stream()\n            .map(this::toCronParserField)\n            .sorted(CronParserField.createFieldTypeComparator())\n            .collect(Collectors.toList());\n\n    if (sortedExpression.size() > 6) {\n        throw new IllegalArgumentException(\"Cron expression contains \" + sortedExpression.size() + \" parts but we expect one of [6, 7]\");\n    }\n\n    expressions.clear();\n\n    for (int i = 1; i <= sortedExpression.size(); i++) {\n        expressions.put(i, new ArrayList<>(sortedExpression.subList(0, i)));\n    }\n}",
        "patched_method_loc": [
            55,
            71
        ],
        "status": "[FE]",
        "error_message": [
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEverySecond: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryDayFireAtTenFifteenYear2005: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testCronAndWithRangeHours: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testCronWithAndHours: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryFiveMinutesBetween14and15AndBetween18And19EveryDay: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testDescriptionDayOfWeek: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryDayFireAtNoon: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryMinuteBetween14and15EveryDay: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEvery45Seconds: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryDayFireAtTenFifteen: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryHour: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testCronAndWithRangesAndEveryExpressions: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testDoWRange: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryFiveMinutesBetween14and15EveryDay: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.CronDescriptorQuartzIntegrationTest#testEveryDayEveryFourHoursFromHour2: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserTest#testParseMulticron: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserTest#testParseExtendedQuartzCronWithAsterixDoY: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserTest#testParseExtendedQuartzCron: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserTest#testParseExtendedQuartzCronWithQuestionMarkDoY: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserTest#testThatEveryMinuteIsPreserved: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserTest#testParseEveryXyears: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testIntervalMinutes: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testEveryXYears: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testErrorAbout2Parts: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testDescribeExpressionWithQuestionMarkAndWeekdays: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testSingleDoWStringMapping: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testIntervalSeconds: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#supportQuartzCronExpressionIncrementsOnYears: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testSunToSat: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testNLSupported: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testInvalidCharsDetectedWithHashExpression1: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testInvalidCharsDetectedWithHashExpression2: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testMonthRangeStringMapping: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testInvalidCharsDetectedWithSingleSpecialChar: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testReportedErrorContainsSameExpressionAsProvided: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testRegressionDifferentMessageForException: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testInvalidCharsDetected: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testLSupportedInDoMRange: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testLSupportedInRange: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testRejectIllegalMonthArgument: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testLSupportedInDoM: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testSingleMonthStringMapping: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testParseExpressionWithQuestionMarkAndWeekdays: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testLSupportedInDoMRangeNextExecutionCalculation: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testJulyMonthAsStringConsideredSpecialChar: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testDoMAndDoWParametersInvalidForQuartz: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testMissingExpressionAndInvalidCharsInErrorMessage: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testDoWRangeStringMapping: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testErrorAboutMissingSteps: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.parser.CronParserQuartzIntegrationTest#testDescribeExpression: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.TestDescriptor#testEverySecond: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.TestDescriptor#testEvery1SecondGerman: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.TestDescriptor#testEvery2SecondsGerman: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.TestDescriptor#testEverySecondGerman: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.TestDescriptor#testEvery2Seconds: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.TestDescriptor#testEverySecond2WithoutYear: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.TestDescriptor#testEverySecondWithoutYear: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.TestDescriptor#testEvery1Second: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.TestDescriptor#testEverySecond2: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.validator.CronValidatorQuartzIntegrationTest#testMonthRangeMappingIsValid: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.validator.CronValidatorQuartzIntegrationTest#testDayOfWeekMappingIsValid: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.validator.CronValidatorQuartzIntegrationTest#testSingleMonthMappingIsValid: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.validator.CronValidatorQuartzIntegrationTest#testQuestionMarkSupport: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.validator.CronValidatorQuartzIntegrationTest#testDayOfWeekRangeMappingIsValid: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.Issue338Test#testEverySecondInFrench: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.Issue143Test#testCase1: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.Issue143Test#testCase2: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.Issue143Test#testCase3: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.Issue143Test#testCase4: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testThreeRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeCustomDefinitionIntegrationTest#testFiveRequiredFieldsSupported: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionRightDoWForFixedYear: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testPeriodicIncrementalHoursIgnorePeriodBounds: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testTimeToNextExecution: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#lastExecutionDec31NotFail: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionRightDoWForFixedMonth: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#nextExecutionNotFail: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#noDateTimeExceptionIsThrownGeneratingNextExecutionWithDayOfWeekFilters: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionTimeProperlySet2: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testShiftTo24thHour: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testExecutionTimeForRanges: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testSaturdayExecutionTime: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#bigNumbersOnDayOfMonthField: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testCronWithFirstWorkDayOfWeek: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testForCron: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testDayOfWeekMapping: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testMinimumInterval: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testMultipleMinuteIntervalTimeFromLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testShiftTo32ndDay: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#lastDayOfTheWeek: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testDayLightSavingsSwitch: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testIllegalQuestionMarkValue: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testMonthRangeExecutionTime: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testHourlyIntervalTimeFromLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#validate31IsSupportedForDoM: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testTimeFromLastExecution: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testDoesNotIgnoreMonthOrDayOfWeek: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionProducingInvalidPrintln: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testWeekdayExecutionTime: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#mustJumpToEndOfMonthIfCurrentMonthHasDesiredDay: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#noSpecificDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#validateIsMatchForRangeOfDates: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#descriptionForExpressionTellsWrongDoW: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionEverySecond: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testTimeShiftingProperlyDone: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#noSpecificDayOfMonthEvaluatedOnLastDay: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionProducingInvalidValues: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testMultipleMinuteIntervalMatch: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testNextExecutionTimeProperlySet: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#mustJumpToNextMonthIfCurrentMonthDoesNotHaveDesiredDay: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzIntegrationTest#testLastExecutionTimeForFixedMonth: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.Issue215Test#testFridayToSaturday: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.Issue215Test#testWorkdayBugWithNextMonth: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.CronTest#testEquivalent: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.CronTest#testSerialization: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.CronTest#testAsScheduleExpression: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptLastDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptFirstDayOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptLastMonth: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.Issue281Test#shouldAcceptFirstMonth: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.mapper.CronMapperIntegrationTest#testSpecificTimeQuartzToCron4j: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.mapper.CronMapperIntegrationTest#testMoreThanOneInstanceQuartzToCron4j: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.mapper.CronMapperIntegrationTest#testRangeOfTimeQuartzToCron4j: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.Issue227Test#testProperDescriptorOutputWithSeconds: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.utils.descriptor.Issue227Test#testProperDescriptorOutput: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.Issue200Test#testMustMatchCronEvenIfNanoSecondsVaries: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.Issue200Test#testMatchExact: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.CompositeCronTest#validateThrowsExceptionEmptyCrons: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.CompositeCronTest#validate: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.CompositeCronTest#asString: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.CompositeCronTest#retrieveFieldsAsMap: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.CompositeCronTest#equivalent: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.CompositeCronTest#testExampleIssue318: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.CompositeCronTest#weDoNotSupportCronsWithDifferentDefinitions: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.CompositeCronTest#retrieve: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.CompositeCronTest#equivalent1: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.CompositeCronTest#getCronDefinition: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.CompositeCronTest#testIssue263: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.CompositeCronTest#weDoNotSupportCompositeWithoutCrons: java.lang.IllegalArgumentException: : Cron expression contains 7 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testForCron: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testExecutionTimesWithIncrementsGreaterThanDaysOfMonth: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testLastExecutionEveryTwoWeeksStartingWithFirstDayOfYear: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testLastExecutionEveryTwoWeeksStartingWithFirstDayOfYearIssue249TzUTC: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testNextExecutionEveryTwoWeeksStartingWithFirstDayOfYear: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testExecutionTimesEveryTwoWeeksStartingWithFirstDayOfYear: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testQuartzCompatibilityIfDoYisQuestionMark: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testQuartzCompatibilityIfDoYisOmitted: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testCustomQuarterlySchedule: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]",
            "com.cronutils.model.time.ExecutionTimeQuartzWithDayOfYearExtensionIntegrationTest#testLastExecutionEveryTwoWeeksStartingWithFirstDayOfYearIssue249TzBuenosAires: java.lang.IllegalArgumentException: : Cron expression contains 8 parts but we expect one of [6, 7]"
        ],
        "validation_time": 19.188284397125244
    }
]