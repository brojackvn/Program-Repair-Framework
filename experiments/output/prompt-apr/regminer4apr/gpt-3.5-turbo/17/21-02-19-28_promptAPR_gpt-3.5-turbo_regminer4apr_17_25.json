{
    "0": {
        "patch": "@SuppressWarnings(\"rawtypes\")\nprotected Object getArrayItem(final Object currentObject, int index) {\n    if (currentObject == null) {\n        return null;\n    }\n\n    if (currentObject instanceof List) {\n        List list = (List) currentObject;\n\n        if (index >= 0) {\n            if (index < list.size()) {\n                return list.get(index);\n            }\n        } else {\n            int reverseIndex = list.size() + index;\n            if (reverseIndex >= 0) {\n                return list.get(reverseIndex);\n            }\n        }\n    } else if (currentObject.getClass().isArray()) {\n        int arrayLength = Array.getLength(currentObject);\n\n        if (index >= 0) {\n            if (index < arrayLength) {\n                return Array.get(currentObject, index);\n            }\n        } else {\n            int reverseIndex = arrayLength + index;\n            if (reverseIndex >= 0) {\n                return Array.get(currentObject, reverseIndex);\n            }\n        }\n    } else if (currentObject instanceof Map) {\n        Map map = (Map) currentObject;\n        Object value = map.get(index);\n        if (value == null) {\n            value = map.get(Integer.toString(index));\n        }\n        return value;\n    } else if (currentObject instanceof Collection) {\n        Collection collection = (Collection) currentObject;\n        int i = 0;\n        for (Object item : collection) {\n            if (i == index) {\n                return item;\n            }\n            i++;\n        }\n    }\n\n    return null;\n}",
        "patched_method_loc": [
            3245,
            3297
        ],
        "status": "[Plausible]",
        "error_message": null,
        "validation_time": 82.84441876411438
    }
}